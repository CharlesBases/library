// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: user.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/charlesbases/protobuf/types/httppb"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = errors.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 用户信息
type UserInfo struct {
	// 用户 id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 用户名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户邮箱
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// 用户状态
	Status               bool     `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}
func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "pb.UserInfo")
	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4b, 0xc4, 0x40,
	0x10, 0x85, 0x49, 0x2e, 0x17, 0xce, 0xe1, 0x48, 0x31, 0x88, 0x84, 0x60, 0x11, 0x53, 0xa5, 0xca,
	0xa2, 0x36, 0x8a, 0x9d, 0x16, 0x22, 0x58, 0x05, 0x6c, 0xc4, 0x66, 0x97, 0x9b, 0x8b, 0x0b, 0xb9,
	0xec, 0x9a, 0x9d, 0xb5, 0xf1, 0x5f, 0xf8, 0x63, 0xfc, 0x7d, 0x92, 0x3d, 0x45, 0x22, 0xd7, 0xed,
	0xf7, 0x78, 0x6f, 0xdf, 0xcc, 0x00, 0x78, 0x47, 0x63, 0x63, 0x47, 0xc3, 0x06, 0x63, 0xab, 0x8a,
	0xb3, 0xce, 0x98, 0xae, 0x27, 0x11, 0x14, 0xe5, 0xb7, 0xc2, 0xf6, 0xbe, 0xd3, 0x83, 0x78, 0x65,
	0xb6, 0x7b, 0x5b, 0xf5, 0x02, 0xab, 0x27, 0x47, 0xe3, 0xc3, 0xb0, 0x35, 0x98, 0x41, 0xac, 0x37,
	0x79, 0x54, 0x46, 0xf5, 0xa2, 0x8d, 0xf5, 0x06, 0x11, 0x92, 0x41, 0xee, 0x28, 0x8f, 0xcb, 0xa8,
	0x3e, 0x6a, 0xc3, 0x1b, 0x8f, 0x61, 0x49, 0x3b, 0xa9, 0xfb, 0x7c, 0x11, 0xc4, 0x3d, 0xe0, 0x09,
	0xa4, 0x8e, 0x25, 0x7b, 0x97, 0x27, 0x65, 0x54, 0xaf, 0xda, 0x1f, 0xaa, 0x4e, 0x01, 0xee, 0x89,
	0x5b, 0x7a, 0xf3, 0xe4, 0xf8, 0xff, 0xff, 0x17, 0x1f, 0x90, 0x4c, 0xdd, 0x78, 0x05, 0xe9, 0xdd,
	0x48, 0x92, 0x09, 0xd7, 0x8d, 0x55, 0xcd, 0xef, 0x3c, 0xc5, 0x8c, 0x2a, 0xfc, 0xfc, 0x92, 0x59,
	0xb1, 0x16, 0xd2, 0x6a, 0xf1, 0x7e, 0x2e, 0xa6, 0x55, 0xf1, 0x1a, 0x96, 0x8f, 0xa6, 0xd3, 0x03,
	0x66, 0x93, 0xf5, 0xaf, 0xea, 0x50, 0x14, 0x66, 0xd1, 0xdb, 0xf4, 0x39, 0x69, 0x6e, 0xac, 0x52,
	0x69, 0xb8, 0xc3, 0xe5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x5e, 0xe6, 0x23, 0x3c, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	// 用户注册
	Create(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfo, error)
	// 用户登录
	Login(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*UserInfo, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Create(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/pb.User/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Login(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/pb.User/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	// 用户注册
	Create(context.Context, *UserInfo) (*UserInfo, error)
	// 用户登录
	Login(context.Context, *GetRequest) (*UserInfo, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Create(ctx context.Context, req *UserInfo) (*UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserServer) Login(ctx context.Context, req *GetRequest) (*UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Create(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Login(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _User_Create_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _User_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
